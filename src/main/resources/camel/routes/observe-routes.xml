<?xml version="1.0" encoding="UTF-8"?>
<routes xmlns="http://camel.apache.org/schema/spring">

    <route>
        <from uri="direct:getRegisteredChatIds"/>
        <setBody>
            <simple>
                SELECT CHATID FROM TELEGRAM_USERS WHERE REGISTERED = TRUE
            </simple>
        </setBody>
        <to uri="jdbc:dataSource?useHeadersAsParameters=true&amp;outputType=SelectList"/>
        <setHeader name="CamelTelegramChatId">
            <simple>${body}</simple>
        </setHeader>
    </route>

    <route>
        <from uri="direct:getRegisteredChatIdsForNotify"/>
        <setBody>
            <simple>
                SELECT CHATID FROM TELEGRAM_USERS WHERE REGISTERED = TRUE AND NOTIFICATIONS = TRUE
            </simple>
        </setBody>
        <to uri="jdbc:dataSource?useHeadersAsParameters=true&amp;outputType=SelectList"/>
        <setHeader name="CamelTelegramChatId">
            <simple>${body}</simple>
        </setHeader>
    </route>

    <route>
        <from uri="quartz:schel1?cron={{cron.every10min}}"/>
        <multicast>
            <to uri="direct:sabrePlLogsParser"/>
            <to uri="direct:waitingCallsStatisticRoute"/>
        </multicast>
    </route>

    <route>
        <from uri="quartz:schel2?cron={{cron.every15min}}"/>
        <multicast>
            <to uri="direct:sabreplServiceState"/>
        </multicast>
    </route>


    <route>
        <from uri="direct:multicast"/>
        <to uri="direct:getRegisteredChatIdsForNotify"/>
        <split>
            <simple>${body}</simple>
            <setHeader name="CamelTelegramChatId">
                <simple>${body.get('CHATID')}</simple>
            </setHeader>
            <setBody>
                <simple>${header.NOTIFY_MESSAGE}</simple>
            </setBody>
            <to uri="telegramBot"/>
        </split>
    </route>

    <route>
        <from uri="direct:dialerState"/>
        <setBody>
            <simple>{limitInSec: 120, periodInSec: 600}</simple>
        </setBody>
        <setHeader name="CamelHttpUri">
            <constant>{{aflmonitor.endpoint.baseurl}}{{aflmonitor.endpoint.dialer-state}}</constant>
        </setHeader>
        <setHeader name="Content-Type">
            <constant>application/json</constant>
        </setHeader>
        <setHeader name="CamelHttpMethod">
            <constant>POST</constant>
        </setHeader>
        <marshal>
            <json library="Jackson"/>
        </marshal>
        <to uri="{{aflmonitor.endpoint.baseurl}}"/>
        <transform>
            <simple resultType="java.lang.String">${body}</simple>
        </transform>
        <to uri="direct:getRegisteredChatIdsForNotify"/>
        <setHeader name="NOTIFY_MESSAGE">
            <simple>WARNING IN SABRE.PL LOG</simple>
        </setHeader>
    </route>

    <route>
        <from uri="direct:sabreplServiceState"/>
        <setHeader name="CamelHttpUri">
            <constant>{{aflmonitor.endpoint.baseurl}}{{aflmonitor.endpoint.sabreplstate}}</constant>
        </setHeader>
        <to uri="direct:sendPostRequestToAflMonitor"/>
        <bean ref="utils" method="getLastSubstring(4096)"/>
        <choice>
            <when>
                <simple>${bodyAs(String)} contains 'not running' || ${bodyAs(String)} not contains 'sabre.pl'</simple>
                <to uri="direct:getRegisteredChatIdsForNotify"/>
                <setHeader name="NOTIFY_MESSAGE">
                    <simple>*SABRE.PL IS NOT RUNNING*</simple>
                </setHeader>
                <setHeader name="CamelTelegramParseMode">
                    <constant>MARKDOWN</constant>
                </setHeader>
                <to uri="direct:multicast"/>
            </when>
        </choice>
    </route>


    <route>
        <from uri="direct:sabrePlLogsParser"/>
        <setHeader name="CamelHttpUri">
            <constant>{{aflmonitor.endpoint.baseurl}}{{aflmonitor.endpoint.sabrepllog}}</constant>
        </setHeader>
        <to uri="direct:sendPostRequestToAflMonitor"/>
        <choice>
            <when>
                <simple>${bodyAs(String)} contains 'error: DBD' ||
                    ${bodyAs(String)} contains 'DBI error' ||
                    ${bodyAs(String)} contains 'FATAL' ||
                    ${bodyAs(String)} contains 'ERROR'
                </simple>
                <to uri="direct:getRegisteredChatIdsForNotify"/>
                <setHeader name="CamelTelegramParseMode">
                    <constant>MARKDOWN</constant>
                </setHeader>
                <setHeader name="NOTIFY_MESSAGE">
                    <simple>ERROR IN SABRE.PL LOG</simple>
                </setHeader>
                <to uri="direct:multicast"/>
            </when>
        </choice>
    </route>

    <route>
        <from uri="direct:waitingCallsStatisticRoute"/>
        <setHeader name="CamelHttpUri">
            <constant>{{aflmonitor.endpoint.baseurl}}{{aflmonitor.endpoint.waiting-calls-stat}}</constant>
        </setHeader>
        <to uri="direct:sendPostRequestToAflMonitor"/>
        <choice>
            <when>
                <jsonpath>$.values.[?(@.waiting_calls &gt; -1)]</jsonpath>
                <setHeader name="JSON_WAITING_CALLS">
                    <jsonpath suppressExceptions="true" writeAsString="true">$.values.[0].waiting_calls</jsonpath>
                </setHeader>
                <setHeader name="JSON_WAITING_TIME">
                    <jsonpath suppressExceptions="true" writeAsString="true">$.values.[0].max_waiting_time</jsonpath>
                </setHeader>
                <setHeader name="JSON_WAITING_DURING_DATE">
                    <jsonpath suppressExceptions="true" writeAsString="true">$.values.[0].waiting_during_date</jsonpath>
                </setHeader>
                <setHeader name="NOTIFY_MESSAGE">
                    <simple>Внимание! Более 50-ти звонков находятся в статусе ожидания.\n\r
Количество ожидающих звонков: ${header.JSON_WAITING_CALLS}
Максимальное время ожидания обработки: ${header.JSON_WAITING_TIME}
Время первой попытки: ${header.JSON_WAITING_DURING_DATE}
                    </simple>
                </setHeader>
                <to uri="direct:getRegisteredChatIdsForNotify"/>
                <setHeader name="CamelTelegramParseMode">
                    <constant>MARKDOWN</constant>
                </setHeader>
                <to uri="direct:multicast"/>
            </when>
        </choice>
    </route>

</routes>